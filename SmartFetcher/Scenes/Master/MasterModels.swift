//
//  MasterModels.swift
//  SmartFetcher
//
//  Created by Raymond Law on 9/1/17.
//  Copyright (c) 2017 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Master
{
  // MARK: - Worker
  
  //static var eventWorker: EventWorkerAPI = EventArrayWorker.shared
  static var eventWorker: EventWorkerAPI = EventCoreDataWorker.shared
  
  // MARK: - Model
  
  struct DisplayedEvent
  {
    var timestamp: String
  }
  
  // MARK: - CRUD operations
  
  enum FetchEvents
  {
    struct Request
    {
    }
    struct Response
    {
      var events: [Event]
    }
    struct ViewModel
    {
      var displayedEvents: [DisplayedEvent]
    }
  }
  
  enum FetchEventAndConfigureCell
  {
    struct Request
    {
      var indexPath: IndexPath
      var cell: UITableViewCell?
    }
    struct Response
    {
      var event: Event
      var cell: UITableViewCell?
    }
    struct ViewModel
    {
      var displayedEvent: DisplayedEvent
      var cell: UITableViewCell?
    }
  }
  
  enum FetchEventAndReturn
  {
    struct Request
    {
      var indexPath: IndexPath
    }
    struct Response
    {
      var event: Event
    }
    struct ViewModel
    {
    }
  }
  
  enum FetchEventWithClosure
  {
    struct Request
    {
      var indexPath: IndexPath
      var resultHandler: (DisplayedEvent) -> Void
    }
    struct Response
    {
      var event: Event
      var resultHandler: (DisplayedEvent) -> Void
    }
    struct ViewModel
    {
    }
  }
  
  enum CreateEvent
  {
    struct Request
    {
      var timestamp: Date
    }
    struct Response
    {
      var event: Event?
    }
    struct ViewModel
    {
      var displayedEvent: DisplayedEvent?
    }
  }
  
  enum DeleteEvent
  {
    struct Request
    {
      var indexPath: IndexPath
    }
    struct Response
    {
    }
    struct ViewModel
    {
    }
  }
  
  // MARK: - Count
  
  enum EventCount
  {
    struct Request
    {
    }
    struct Response
    {
    }
    struct ViewModel
    {
    }
  }
  
  // MARK: - Event update lifecycle
  
  enum StartEventUpdates
  {
    struct Request
    {
    }
    struct Response
    {
    }
    struct ViewModel
    {
    }
  }
  
  enum StopEventUpdates
  {
    struct Request
    {
    }
    struct Response
    {
    }
    struct ViewModel
    {
    }
  }
}
